{"remainingRequest":"D:\\vuegis\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vuegis\\src\\views\\gis.vue?vue&type=style&index=0&id=59d4bd27&scoped=true&lang=css&","dependencies":[{"path":"D:\\vuegis\\src\\views\\gis.vue","mtime":1630398859713},{"path":"D:\\vuegis\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vuegis\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\vuegis\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\vuegis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vuegis\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5naXNDb21wb25lbnQgew0KICBiYWNrZ3JvdW5kOiAjMDA0MDgwOw0KfQ0K"},{"version":3,"sources":["gis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwKA;AACA;AACA","file":"gis.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"gisComponent\" :style=\"style\" id=\"cesiumContainer\"></div>\r\n</template>\r\n<script>\r\nimport api from '@/api/base';\r\nexport default {\r\n  data() {\r\n    return {\r\n      style: {},\r\n      viewer: null\r\n    };\r\n  },\r\n  mounted() {\r\n    this.setScreen();\r\n    window.addEventListener('resize', this.setScreen());\r\n    this.$nextTick(() => {\r\n      this.initMap();\r\n    });\r\n  },\r\n  methods: {\r\n    setScreen() {\r\n      // 可视区域的尺\r\n      let visibleWidth = window.innerWidth;\r\n      let visibleHeight = window.innerHeight;\r\n      this.style = {\r\n        width: visibleWidth + 'px',\r\n        height: visibleHeight + 'px'\r\n      };\r\n      // 手动配置的面板尺\r\n      //   let manualWidth = 1920;\r\n      //   let manualHeight = 1080;\r\n      //   // 计算横向和纵向的缩放系数\r\n      //   var widthPercentage = (1.0 * visibleWidth) / manualWidth;\r\n      //   var heightPercentage = (1.0 * visibleHeight) / manualHeight;\r\n      //   // 取得最小缩放系\r\n      //   this.scale = Math.min(widthPercentage, heightPercentage);\r\n    },\r\n    initMap() {\r\n      Cesium.Ion.defaultAccessToken =\r\n        'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkZDM2MTE2MS0xZGNjLTRiMzktYWU3ZS00NDIwNGE0NTJjYTEiLCJpZCI6NTM1NDQsImlhdCI6MTYxOTIzMTg3Mn0.BQTAdgSPIDl6JwVNdmPiWuKvBv5qxD4qyNDm2qMkvYE';\r\n      this.viewer = new Cesium.Viewer('cesiumContainer', {\r\n        geocoder: false,\r\n        homeButton: false,\r\n        sceneModePicker: '3D',\r\n        scene3DOnly: true,\r\n        baseLayerPicker: false,\r\n        navigationHelpButton: false,\r\n        selectionIndicator: false,\r\n        animation: false,\r\n        timeline: false,\r\n        infoBox: false,\r\n        imageryProvider: new Cesium.ArcGisMapServerImageryProvider({\r\n          url: 'https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer',\r\n          maximumLevel: 23\r\n        })\r\n      });\r\n      this.viewer.camera.flyTo({\r\n        destination: Cesium.Cartesian3.fromDegrees(103.823557, 36.058039, 6978702.439565099)\r\n      });\r\n      this.viewer.dataSources.add(\r\n        Cesium.GeoJsonDataSource.load('./gis/data/china.json', {\r\n          stroke: Cesium.Color.DARKSLATEBLUE,\r\n          fill: new Cesium.Color(0, 0, 0, 0)\r\n        })\r\n      );\r\n      this.gisClick();\r\n      this.drawPoint();\r\n    },\r\n    async drawPoint() {\r\n      let res = await api.get('./gis/data/china.json');\r\n      if (res.status === 200) {\r\n        let list = res.data.features;\r\n        list.forEach((item, index) => {\r\n          let location = item.properties.center;\r\n          this.viewer.entities.add({\r\n            id: `landmark${index}`,\r\n            name: 'point-layer',\r\n            position: Cesium.Cartesian3.fromDegrees(...location, 0),\r\n            point: {\r\n              color: Cesium.Color.WHITE,\r\n              pixelSize: 5,\r\n              outlineWidth: 2,\r\n              outlineColor: Cesium.Color.RED\r\n            },\r\n            label: {\r\n              show: true,\r\n              text: item.properties.name,\r\n              font: '14pt',\r\n              fillColor: Cesium.Color.BLUE,\r\n              pixelOffset: new Cesium.Cartesian2(0, -15)\r\n            },\r\n            option: {\r\n              name: item.properties.name\r\n            }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    gisClick() {\r\n      let that = this;\r\n      let scene = this.viewer.scene;\r\n      let handler = new Cesium.ScreenSpaceEventHandler(scene.canvas);\r\n      handler.setInputAction(function(event) {\r\n        let pick = scene.pick(event.position);\r\n        if (Cesium.defined(pick)) {\r\n          var ellipsoid = scene.globe.ellipsoid;\r\n          var height = ellipsoid.cartesianToCartographic(that.viewer.camera.position).height;\r\n          // that.mapRotate();\r\n          that.viewer.entities.add({\r\n            id:'line',\r\n            name:'线条',\r\n            polyline:{\r\n              positions: Cesium.Cartesian3.fromDegreesArray([103.823557, 36.058039,87.617733, 43.792818]),\r\n              width: 2,\r\n              material: Cesium.Color.RED,\r\n              clampToGround:true,\r\n            },\r\n            position:Cesium.Cartesian3.fromDegrees(103.823557, 36.058039,87.617733,0),\r\n            path:{\r\n              show:true,\r\n              leadTime:10,\r\n              trailTime:6,\r\n              width:5,\r\n              resolution:40,\r\n              material:Cesium.Color.RED\r\n            }\r\n          })\r\n        }\r\n      }, Cesium.ScreenSpaceEventType.LEFT_CLICK);\r\n    },\r\n    mapRotate() {\r\n      let that = this;\r\n      var position = Cesium.Cartesian3.fromDegrees(103.823557, 36.058039, 600000);\r\n      var pitch = Cesium.Math.toRadians(-90);\r\n      var angle = 360 / 30;\r\n      var distance = 50000;\r\n      var startTime = Cesium.JulianDate.fromDate(new Date());\r\n      that.viewer.clock.startTime = startTime.clone(); // 开始时间\r\n      that.viewer.clock.currentTime = startTime.clone(); // 当前时间\r\n      that.viewer.clock.clockRange = Cesium.ClockRange.CLAMPED; // 行为方式\r\n      that.viewer.clock.clockStep = Cesium.ClockStep.SYSTEM_CLOCK; // 时钟设置为当前系统时间; 忽略所有其他设置。\r\n      // 相机的当前heading\r\n      var initialHeading = that.viewer.camera.heading;\r\n      var Exection = function TimeExecution() {\r\n        // 当前已经过去的时间，单位s\r\n        var delTime = Cesium.JulianDate.secondsDifference(that.viewer.clock.currentTime, that.viewer.clock.startTime);\r\n        var heading = Cesium.Math.toRadians(delTime * angle) + initialHeading;\r\n        that.viewer.scene.camera.setView({\r\n          destination: position, // 点的坐标\r\n          orientation: {\r\n            heading: heading,\r\n            pitch: pitch,\r\n            roll: 0.0\r\n          }\r\n        });\r\n        that.viewer.scene.camera.moveBackward(distance);\r\n\r\n        if (Cesium.JulianDate.compare(that.viewer.clock.currentTime, that.viewer.clock.stopTime) >= 0) {\r\n          that.viewer.clock.onTick.removeEventListener(Exection);\r\n        }\r\n      };\r\n\r\n      that.viewer.clock.onTick.addEventListener(Exection);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.gisComponent {\r\n  background: #004080;\r\n}\r\n</style>\r\n"]}]}